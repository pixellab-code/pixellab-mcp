name: Publish

on:
  release:
    types: [created]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20]

    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          
      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: |
          npm install
          npm audit fix --force || true

      - name: Create .env.development.secrets
        run: |
          echo "PIXELLAB_SECRET=${{ secrets.PIXELLAB_SECRET }}" > .env.development.secrets

      - name: Run tests
        run: npm test

      - name: Build package
        run: npm run build

      - name: Test MCP server help
        run: node dist/index.js --help

  publish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/
          
      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Build package
        run: npm run build

      - name: Set version from git tag
        run: |
          VERSION=$(git describe --tags --exact-match 2>/dev/null || echo "0.0.0")
          npm version $VERSION --no-git-tag-version

      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM }}
        run: npm publish --access public 